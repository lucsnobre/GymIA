{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programa\\xE7\\xE3o\\\\GymIA\\\\client\\\\src\\\\contexts\\\\WorkoutContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutContext = /*#__PURE__*/createContext();\n\n// Action Types\nconst WORKOUT_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_PLANS: 'SET_PLANS',\n  ADD_PLAN: 'ADD_PLAN',\n  UPDATE_PLAN: 'UPDATE_PLAN',\n  DELETE_PLAN: 'DELETE_PLAN',\n  SET_ACTIVE_PLAN: 'SET_ACTIVE_PLAN',\n  SET_STATISTICS: 'SET_STATISTICS',\n  SET_CHAT_HISTORY: 'SET_CHAT_HISTORY',\n  ADD_CHAT_MESSAGE: 'ADD_CHAT_MESSAGE',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Initial State\nconst initialState = {\n  plans: [],\n  activePlan: null,\n  statistics: {\n    totalPlans: 0,\n    activePlans: 0,\n    completedPlans: 0,\n    totalWorkouts: 0\n  },\n  chatHistory: [],\n  loading: false,\n  error: null\n};\n\n// Reducer\nfunction workoutReducer(state, action) {\n  var _state$activePlan, _state$activePlan2;\n  switch (action.type) {\n    case WORKOUT_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case WORKOUT_ACTIONS.SET_PLANS:\n      return {\n        ...state,\n        plans: action.payload,\n        loading: false\n      };\n    case WORKOUT_ACTIONS.ADD_PLAN:\n      return {\n        ...state,\n        plans: [action.payload, ...state.plans],\n        statistics: {\n          ...state.statistics,\n          totalPlans: state.statistics.totalPlans + 1,\n          activePlans: action.payload.status === 'active' ? state.statistics.activePlans + 1 : state.statistics.activePlans\n        }\n      };\n    case WORKOUT_ACTIONS.UPDATE_PLAN:\n      return {\n        ...state,\n        plans: state.plans.map(plan => plan.id === action.payload.id ? action.payload : plan),\n        activePlan: ((_state$activePlan = state.activePlan) === null || _state$activePlan === void 0 ? void 0 : _state$activePlan.id) === action.payload.id ? action.payload : state.activePlan\n      };\n    case WORKOUT_ACTIONS.DELETE_PLAN:\n      const deletedPlan = state.plans.find(plan => plan.id === action.payload);\n      return {\n        ...state,\n        plans: state.plans.filter(plan => plan.id !== action.payload),\n        activePlan: ((_state$activePlan2 = state.activePlan) === null || _state$activePlan2 === void 0 ? void 0 : _state$activePlan2.id) === action.payload ? null : state.activePlan,\n        statistics: {\n          ...state.statistics,\n          totalPlans: state.statistics.totalPlans - 1,\n          activePlans: (deletedPlan === null || deletedPlan === void 0 ? void 0 : deletedPlan.status) === 'active' ? state.statistics.activePlans - 1 : state.statistics.activePlans,\n          completedPlans: (deletedPlan === null || deletedPlan === void 0 ? void 0 : deletedPlan.status) === 'completed' ? state.statistics.completedPlans - 1 : state.statistics.completedPlans\n        }\n      };\n    case WORKOUT_ACTIONS.SET_ACTIVE_PLAN:\n      return {\n        ...state,\n        activePlan: action.payload\n      };\n    case WORKOUT_ACTIONS.SET_STATISTICS:\n      return {\n        ...state,\n        statistics: action.payload\n      };\n    case WORKOUT_ACTIONS.SET_CHAT_HISTORY:\n      return {\n        ...state,\n        chatHistory: action.payload\n      };\n    case WORKOUT_ACTIONS.ADD_CHAT_MESSAGE:\n      return {\n        ...state,\n        chatHistory: [...state.chatHistory, action.payload]\n      };\n    case WORKOUT_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case WORKOUT_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport function WorkoutProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(workoutReducer, initialState);\n  const {\n    isAuthenticated,\n    user,\n    api\n  } = useAuth();\n\n  // Load user plans on mount and auth change\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadPlans();\n      loadStatistics();\n      loadChatHistory();\n    } else {\n      // Reset state when logged out\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_PLANS,\n        payload: []\n      });\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_STATISTICS,\n        payload: initialState.statistics\n      });\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_CHAT_HISTORY,\n        payload: []\n      });\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ACTIVE_PLAN,\n        payload: null\n      });\n    }\n  }, [isAuthenticated]);\n\n  // API Functions\n  const loadPlans = async () => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.get('/api/plans');\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_PLANS,\n        payload: response.data.plans || []\n      });\n    } catch (error) {\n      console.error('Error loading plans:', error);\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: 'Erro ao carregar planos'\n      });\n      toast.error('Erro ao carregar planos');\n    }\n  };\n  const loadStatistics = async () => {\n    try {\n      const response = await api.get('/api/plans/statistics');\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_STATISTICS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error loading statistics:', error);\n    }\n  };\n  const loadChatHistory = async () => {\n    try {\n      const response = await api.get('/api/chat/history');\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_CHAT_HISTORY,\n        payload: response.data.messages || []\n      });\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n    }\n  };\n  const createPlan = async planData => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.post('/api/plans', planData);\n      dispatch({\n        type: WORKOUT_ACTIONS.ADD_PLAN,\n        payload: response.data.plan\n      });\n      toast.success('Plano criado com sucesso!');\n      return response.data.plan;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating plan:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao criar plano';\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const updatePlan = async (planId, updates) => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.put(`/api/plans/${planId}`, updates);\n      dispatch({\n        type: WORKOUT_ACTIONS.UPDATE_PLAN,\n        payload: response.data.plan\n      });\n      toast.success('Plano atualizado com sucesso!');\n      return response.data.plan;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error updating plan:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro ao atualizar plano';\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const deletePlan = async planId => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      await api.delete(`/api/plans/${planId}`);\n      dispatch({\n        type: WORKOUT_ACTIONS.DELETE_PLAN,\n        payload: planId\n      });\n      toast.success('Plano excluÃ­do com sucesso!');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error deleting plan:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Erro ao excluir plano';\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const duplicatePlan = async planId => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.post(`/api/plans/${planId}/duplicate`);\n      dispatch({\n        type: WORKOUT_ACTIONS.ADD_PLAN,\n        payload: response.data.plan\n      });\n      toast.success('Plano duplicado com sucesso!');\n      return response.data.plan;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error duplicating plan:', error);\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erro ao duplicar plano';\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const savePlanFromChat = async workoutPlan => {\n    try {\n      const planData = {\n        name: workoutPlan.name || 'Plano Gerado pela IA',\n        description: workoutPlan.description || 'Plano personalizado gerado pelo assistente de IA',\n        exercises: workoutPlan.exercises || [],\n        duration: workoutPlan.duration || '4 semanas',\n        difficulty: workoutPlan.difficulty || 'intermediate',\n        goals: workoutPlan.goals || [],\n        status: 'active',\n        source: 'ai_generated'\n      };\n      return await createPlan(planData);\n    } catch (error) {\n      console.error('Error saving plan from chat:', error);\n      throw error;\n    }\n  };\n  const sendChatMessage = async (message, sessionId = null) => {\n    try {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: true\n      });\n\n      // Add user message to chat history\n      const userMessage = {\n        id: Date.now(),\n        message,\n        message_type: 'user',\n        timestamp: new Date().toISOString()\n      };\n      dispatch({\n        type: WORKOUT_ACTIONS.ADD_CHAT_MESSAGE,\n        payload: userMessage\n      });\n      const response = await api.post('/api/chat/message', {\n        message,\n        sessionId\n      });\n\n      // Add AI response to chat history\n      const aiMessage = {\n        id: Date.now() + 1,\n        message: 'Plano de treino personalizado',\n        response: response.data.workoutPlan,\n        message_type: 'assistant',\n        timestamp: new Date().toISOString()\n      };\n      dispatch({\n        type: WORKOUT_ACTIONS.ADD_CHAT_MESSAGE,\n        payload: aiMessage\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error sending chat message:', error);\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Erro ao enviar mensagem';\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      throw error;\n    } finally {\n      dispatch({\n        type: WORKOUT_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const setActivePlan = plan => {\n    dispatch({\n      type: WORKOUT_ACTIONS.SET_ACTIVE_PLAN,\n      payload: plan\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: WORKOUT_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Local Storage Functions (for guest users)\n  const saveToLocalStorage = (key, data) => {\n    try {\n      localStorage.setItem(`gymia_${key}`, JSON.stringify(data));\n    } catch (error) {\n      console.error('Error saving to localStorage:', error);\n    }\n  };\n  const loadFromLocalStorage = key => {\n    try {\n      const data = localStorage.getItem(`gymia_${key}`);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n      return null;\n    }\n  };\n  const clearLocalStorage = () => {\n    try {\n      Object.keys(localStorage).forEach(key => {\n        if (key.startsWith('gymia_')) {\n          localStorage.removeItem(key);\n        }\n      });\n    } catch (error) {\n      console.error('Error clearing localStorage:', error);\n    }\n  };\n\n  // Guest Functions\n  const createGuestPlan = planData => {\n    const guestPlan = {\n      id: Date.now(),\n      ...planData,\n      created_at: new Date().toISOString(),\n      isGuest: true\n    };\n    const existingPlans = loadFromLocalStorage('guest_plans') || [];\n    const updatedPlans = [guestPlan, ...existingPlans];\n    saveToLocalStorage('guest_plans', updatedPlans);\n    dispatch({\n      type: WORKOUT_ACTIONS.ADD_PLAN,\n      payload: guestPlan\n    });\n    toast.success('Plano salvo localmente!');\n    return guestPlan;\n  };\n  const loadGuestPlans = () => {\n    const guestPlans = loadFromLocalStorage('guest_plans') || [];\n    dispatch({\n      type: WORKOUT_ACTIONS.SET_PLANS,\n      payload: guestPlans\n    });\n  };\n\n  // Context Value\n  const contextValue = {\n    // State\n    ...state,\n    // Actions\n    loadPlans,\n    createPlan,\n    updatePlan,\n    deletePlan,\n    duplicatePlan,\n    savePlanFromChat,\n    sendChatMessage,\n    setActivePlan,\n    clearError,\n    // Statistics\n    loadStatistics,\n    // Chat\n    loadChatHistory,\n    // Guest Functions\n    createGuestPlan,\n    loadGuestPlans,\n    saveToLocalStorage,\n    loadFromLocalStorage,\n    clearLocalStorage\n  };\n  return /*#__PURE__*/_jsxDEV(WorkoutContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom Hook\n_s(WorkoutProvider, \"GNZrUXabVV8T1wzy9gE8rJ/LewA=\", false, function () {\n  return [useAuth];\n});\n_c = WorkoutProvider;\nexport function useWorkout() {\n  _s2();\n  const context = useContext(WorkoutContext);\n  if (!context) {\n    throw new Error('useWorkout must be used within a WorkoutProvider');\n  }\n  return context;\n}\n_s2(useWorkout, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default WorkoutContext;\nvar _c;\n$RefreshReg$(_c, \"WorkoutProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useAuth","toast","jsxDEV","_jsxDEV","WorkoutContext","WORKOUT_ACTIONS","SET_LOADING","SET_PLANS","ADD_PLAN","UPDATE_PLAN","DELETE_PLAN","SET_ACTIVE_PLAN","SET_STATISTICS","SET_CHAT_HISTORY","ADD_CHAT_MESSAGE","SET_ERROR","CLEAR_ERROR","initialState","plans","activePlan","statistics","totalPlans","activePlans","completedPlans","totalWorkouts","chatHistory","loading","error","workoutReducer","state","action","_state$activePlan","_state$activePlan2","type","payload","status","map","plan","id","deletedPlan","find","filter","WorkoutProvider","children","_s","dispatch","isAuthenticated","user","api","loadPlans","loadStatistics","loadChatHistory","response","get","data","console","messages","createPlan","planData","post","success","_error$response","_error$response$data","errorMessage","message","updatePlan","planId","updates","put","_error$response2","_error$response2$data","deletePlan","delete","_error$response3","_error$response3$data","duplicatePlan","_error$response4","_error$response4$data","savePlanFromChat","workoutPlan","name","description","exercises","duration","difficulty","goals","source","sendChatMessage","sessionId","userMessage","Date","now","message_type","timestamp","toISOString","aiMessage","_error$response5","_error$response5$data","setActivePlan","clearError","saveToLocalStorage","key","localStorage","setItem","JSON","stringify","loadFromLocalStorage","getItem","parse","clearLocalStorage","Object","keys","forEach","startsWith","removeItem","createGuestPlan","guestPlan","created_at","isGuest","existingPlans","updatedPlans","loadGuestPlans","guestPlans","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWorkout","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/ProgramaÃ§Ã£o/GymIA/client/src/contexts/WorkoutContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useAuth } from './AuthContext';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst WorkoutContext = createContext();\r\n\r\n// Action Types\r\nconst WORKOUT_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_PLANS: 'SET_PLANS',\r\n  ADD_PLAN: 'ADD_PLAN',\r\n  UPDATE_PLAN: 'UPDATE_PLAN',\r\n  DELETE_PLAN: 'DELETE_PLAN',\r\n  SET_ACTIVE_PLAN: 'SET_ACTIVE_PLAN',\r\n  SET_STATISTICS: 'SET_STATISTICS',\r\n  SET_CHAT_HISTORY: 'SET_CHAT_HISTORY',\r\n  ADD_CHAT_MESSAGE: 'ADD_CHAT_MESSAGE',\r\n  SET_ERROR: 'SET_ERROR',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Initial State\r\nconst initialState = {\r\n  plans: [],\r\n  activePlan: null,\r\n  statistics: {\r\n    totalPlans: 0,\r\n    activePlans: 0,\r\n    completedPlans: 0,\r\n    totalWorkouts: 0\r\n  },\r\n  chatHistory: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Reducer\r\nfunction workoutReducer(state, action) {\r\n  switch (action.type) {\r\n    case WORKOUT_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.SET_PLANS:\r\n      return {\r\n        ...state,\r\n        plans: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.ADD_PLAN:\r\n      return {\r\n        ...state,\r\n        plans: [action.payload, ...state.plans],\r\n        statistics: {\r\n          ...state.statistics,\r\n          totalPlans: state.statistics.totalPlans + 1,\r\n          activePlans: action.payload.status === 'active' ? state.statistics.activePlans + 1 : state.statistics.activePlans\r\n        }\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.UPDATE_PLAN:\r\n      return {\r\n        ...state,\r\n        plans: state.plans.map(plan => \r\n          plan.id === action.payload.id ? action.payload : plan\r\n        ),\r\n        activePlan: state.activePlan?.id === action.payload.id ? action.payload : state.activePlan\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.DELETE_PLAN:\r\n      const deletedPlan = state.plans.find(plan => plan.id === action.payload);\r\n      return {\r\n        ...state,\r\n        plans: state.plans.filter(plan => plan.id !== action.payload),\r\n        activePlan: state.activePlan?.id === action.payload ? null : state.activePlan,\r\n        statistics: {\r\n          ...state.statistics,\r\n          totalPlans: state.statistics.totalPlans - 1,\r\n          activePlans: deletedPlan?.status === 'active' ? state.statistics.activePlans - 1 : state.statistics.activePlans,\r\n          completedPlans: deletedPlan?.status === 'completed' ? state.statistics.completedPlans - 1 : state.statistics.completedPlans\r\n        }\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.SET_ACTIVE_PLAN:\r\n      return {\r\n        ...state,\r\n        activePlan: action.payload\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.SET_STATISTICS:\r\n      return {\r\n        ...state,\r\n        statistics: action.payload\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.SET_CHAT_HISTORY:\r\n      return {\r\n        ...state,\r\n        chatHistory: action.payload\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.ADD_CHAT_MESSAGE:\r\n      return {\r\n        ...state,\r\n        chatHistory: [...state.chatHistory, action.payload]\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case WORKOUT_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context Provider\r\nexport function WorkoutProvider({ children }) {\r\n  const [state, dispatch] = useReducer(workoutReducer, initialState);\r\n  const { isAuthenticated, user, api } = useAuth();\r\n\r\n  // Load user plans on mount and auth change\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      loadPlans();\r\n      loadStatistics();\r\n      loadChatHistory();\r\n    } else {\r\n      // Reset state when logged out\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_PLANS, payload: [] });\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_STATISTICS, payload: initialState.statistics });\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_CHAT_HISTORY, payload: [] });\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ACTIVE_PLAN, payload: null });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // API Functions\r\n  const loadPlans = async () => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      const response = await api.get('/api/plans');\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_PLANS, payload: response.data.plans || [] });\r\n    } catch (error) {\r\n      console.error('Error loading plans:', error);\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: 'Erro ao carregar planos' });\r\n      toast.error('Erro ao carregar planos');\r\n    }\r\n  };\r\n\r\n  const loadStatistics = async () => {\r\n    try {\r\n      const response = await api.get('/api/plans/statistics');\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_STATISTICS, payload: response.data });\r\n    } catch (error) {\r\n      console.error('Error loading statistics:', error);\r\n    }\r\n  };\r\n\r\n  const loadChatHistory = async () => {\r\n    try {\r\n      const response = await api.get('/api/chat/history');\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_CHAT_HISTORY, payload: response.data.messages || [] });\r\n    } catch (error) {\r\n      console.error('Error loading chat history:', error);\r\n    }\r\n  };\r\n\r\n  const createPlan = async (planData) => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      const response = await api.post('/api/plans', planData);\r\n      dispatch({ type: WORKOUT_ACTIONS.ADD_PLAN, payload: response.data.plan });\r\n      toast.success('Plano criado com sucesso!');\r\n      return response.data.plan;\r\n    } catch (error) {\r\n      console.error('Error creating plan:', error);\r\n      const errorMessage = error.response?.data?.message || 'Erro ao criar plano';\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  const updatePlan = async (planId, updates) => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      const response = await api.put(`/api/plans/${planId}`, updates);\r\n      dispatch({ type: WORKOUT_ACTIONS.UPDATE_PLAN, payload: response.data.plan });\r\n      toast.success('Plano atualizado com sucesso!');\r\n      return response.data.plan;\r\n    } catch (error) {\r\n      console.error('Error updating plan:', error);\r\n      const errorMessage = error.response?.data?.message || 'Erro ao atualizar plano';\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  const deletePlan = async (planId) => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      await api.delete(`/api/plans/${planId}`);\r\n      dispatch({ type: WORKOUT_ACTIONS.DELETE_PLAN, payload: planId });\r\n      toast.success('Plano excluÃ­do com sucesso!');\r\n    } catch (error) {\r\n      console.error('Error deleting plan:', error);\r\n      const errorMessage = error.response?.data?.message || 'Erro ao excluir plano';\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  const duplicatePlan = async (planId) => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      const response = await api.post(`/api/plans/${planId}/duplicate`);\r\n      dispatch({ type: WORKOUT_ACTIONS.ADD_PLAN, payload: response.data.plan });\r\n      toast.success('Plano duplicado com sucesso!');\r\n      return response.data.plan;\r\n    } catch (error) {\r\n      console.error('Error duplicating plan:', error);\r\n      const errorMessage = error.response?.data?.message || 'Erro ao duplicar plano';\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  const savePlanFromChat = async (workoutPlan) => {\r\n    try {\r\n      const planData = {\r\n        name: workoutPlan.name || 'Plano Gerado pela IA',\r\n        description: workoutPlan.description || 'Plano personalizado gerado pelo assistente de IA',\r\n        exercises: workoutPlan.exercises || [],\r\n        duration: workoutPlan.duration || '4 semanas',\r\n        difficulty: workoutPlan.difficulty || 'intermediate',\r\n        goals: workoutPlan.goals || [],\r\n        status: 'active',\r\n        source: 'ai_generated'\r\n      };\r\n\r\n      return await createPlan(planData);\r\n    } catch (error) {\r\n      console.error('Error saving plan from chat:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = async (message, sessionId = null) => {\r\n    try {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      // Add user message to chat history\r\n      const userMessage = {\r\n        id: Date.now(),\r\n        message,\r\n        message_type: 'user',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      dispatch({ type: WORKOUT_ACTIONS.ADD_CHAT_MESSAGE, payload: userMessage });\r\n\r\n      const response = await api.post('/api/chat/message', { message, sessionId });\r\n      \r\n      // Add AI response to chat history\r\n      const aiMessage = {\r\n        id: Date.now() + 1,\r\n        message: 'Plano de treino personalizado',\r\n        response: response.data.workoutPlan,\r\n        message_type: 'assistant',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      dispatch({ type: WORKOUT_ACTIONS.ADD_CHAT_MESSAGE, payload: aiMessage });\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error sending chat message:', error);\r\n      const errorMessage = error.response?.data?.message || 'Erro ao enviar mensagem';\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_ERROR, payload: errorMessage });\r\n      toast.error(errorMessage);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: WORKOUT_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  const setActivePlan = (plan) => {\r\n    dispatch({ type: WORKOUT_ACTIONS.SET_ACTIVE_PLAN, payload: plan });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: WORKOUT_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Local Storage Functions (for guest users)\r\n  const saveToLocalStorage = (key, data) => {\r\n    try {\r\n      localStorage.setItem(`gymia_${key}`, JSON.stringify(data));\r\n    } catch (error) {\r\n      console.error('Error saving to localStorage:', error);\r\n    }\r\n  };\r\n\r\n  const loadFromLocalStorage = (key) => {\r\n    try {\r\n      const data = localStorage.getItem(`gymia_${key}`);\r\n      return data ? JSON.parse(data) : null;\r\n    } catch (error) {\r\n      console.error('Error loading from localStorage:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const clearLocalStorage = () => {\r\n    try {\r\n      Object.keys(localStorage).forEach(key => {\r\n        if (key.startsWith('gymia_')) {\r\n          localStorage.removeItem(key);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error clearing localStorage:', error);\r\n    }\r\n  };\r\n\r\n  // Guest Functions\r\n  const createGuestPlan = (planData) => {\r\n    const guestPlan = {\r\n      id: Date.now(),\r\n      ...planData,\r\n      created_at: new Date().toISOString(),\r\n      isGuest: true\r\n    };\r\n\r\n    const existingPlans = loadFromLocalStorage('guest_plans') || [];\r\n    const updatedPlans = [guestPlan, ...existingPlans];\r\n    saveToLocalStorage('guest_plans', updatedPlans);\r\n    \r\n    dispatch({ type: WORKOUT_ACTIONS.ADD_PLAN, payload: guestPlan });\r\n    toast.success('Plano salvo localmente!');\r\n    return guestPlan;\r\n  };\r\n\r\n  const loadGuestPlans = () => {\r\n    const guestPlans = loadFromLocalStorage('guest_plans') || [];\r\n    dispatch({ type: WORKOUT_ACTIONS.SET_PLANS, payload: guestPlans });\r\n  };\r\n\r\n  // Context Value\r\n  const contextValue = {\r\n    // State\r\n    ...state,\r\n    \r\n    // Actions\r\n    loadPlans,\r\n    createPlan,\r\n    updatePlan,\r\n    deletePlan,\r\n    duplicatePlan,\r\n    savePlanFromChat,\r\n    sendChatMessage,\r\n    setActivePlan,\r\n    clearError,\r\n    \r\n    // Statistics\r\n    loadStatistics,\r\n    \r\n    // Chat\r\n    loadChatHistory,\r\n    \r\n    // Guest Functions\r\n    createGuestPlan,\r\n    loadGuestPlans,\r\n    saveToLocalStorage,\r\n    loadFromLocalStorage,\r\n    clearLocalStorage\r\n  };\r\n\r\n  return (\r\n    <WorkoutContext.Provider value={contextValue}>\r\n      {children}\r\n    </WorkoutContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom Hook\r\nexport function useWorkout() {\r\n  const context = useContext(WorkoutContext);\r\n  if (!context) {\r\n    throw new Error('useWorkout must be used within a WorkoutProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport default WorkoutContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}